module Domainic
  module Type
    module Behavior
      # @since 0.1.0
      module EnumerableBehavior : Behavior
        def being_duplicative: () -> EnumerableBehavior

        alias being_non_unique being_duplicative

        alias duplicative being_duplicative

        alias having_duplicate_elements being_duplicative

        alias having_duplicate_entries being_duplicative

        alias having_duplicate_members being_duplicative

        alias with_duplicate_elements being_duplicative

        alias with_duplicate_entries being_duplicative

        alias with_duplicate_members being_duplicative

        def being_empty: () -> EnumerableBehavior

        alias empty being_empty

        alias having_no_elements being_empty

        alias having_no_entries being_empty

        alias having_no_members being_empty

        alias having_zero_elements being_empty

        alias having_zero_entries being_empty

        alias having_zero_members being_empty

        alias with_no_elements being_empty

        alias with_no_entries being_empty

        alias with_no_members being_empty

        alias with_zero_elements being_empty

        alias with_zero_entries being_empty

        alias with_zero_members being_empty

        def being_populated: () -> EnumerableBehavior

        alias having_elements being_populated

        alias having_entries being_populated

        alias having_members being_populated

        alias non_empty being_populated

        alias populated being_populated

        alias with_elements being_populated

        alias with_entries being_populated

        alias with_members being_populated

        def having_maximum_count: (Integer count) -> EnumerableBehavior

        alias having_max_count having_maximum_count

        alias having_max_len having_maximum_count

        alias having_max_length having_maximum_count

        alias having_max_size having_maximum_count

        alias having_maximum_len having_maximum_count

        alias having_maximum_length having_maximum_count

        alias having_maximum_size having_maximum_count

        alias max_count having_maximum_count

        alias max_len having_maximum_count

        alias max_length having_maximum_count

        alias max_size having_maximum_count

        alias maximum_count having_maximum_count

        alias maximum_len having_maximum_count

        alias maximum_length having_maximum_count

        alias maximum_size having_maximum_count

        alias with_max_count having_maximum_count

        alias with_max_len having_maximum_count

        alias with_max_length having_maximum_count

        alias with_max_size having_maximum_count

        alias with_maximum_count having_maximum_count

        alias with_maximum_len having_maximum_count

        alias with_maximum_length having_maximum_count

        alias with_maximum_size having_maximum_count

        def having_minimum_count: (Integer count) -> EnumerableBehavior

        alias having_min_count having_minimum_count

        alias having_min_len having_minimum_count

        alias having_min_length having_minimum_count

        alias having_min_size having_minimum_count

        alias having_minimum_len having_minimum_count

        alias having_minimum_length having_minimum_count

        alias having_minimum_size having_minimum_count

        alias min_count having_minimum_count

        alias min_len having_minimum_count

        alias min_length having_minimum_count

        alias min_size having_minimum_count

        alias minimum_count having_minimum_count

        alias minimum_len having_minimum_count

        alias minimum_length having_minimum_count

        alias minimum_size having_minimum_count

        alias with_min_count having_minimum_count

        alias with_min_len having_minimum_count

        alias with_min_length having_minimum_count

        alias with_min_size having_minimum_count

        alias with_minimum_count having_minimum_count

        alias with_minimum_len having_minimum_count

        alias with_minimum_length having_minimum_count

        alias with_minimum_size having_minimum_count

        def of: (Class | Module | Behavior type) -> EnumerableBehavior

        alias having_elements_of of

        alias having_members_of of

        alias having_items_of of

        alias with_elements_of of

        alias with_members_of of

        alias with_items_of of
      end
    end
  end
end
